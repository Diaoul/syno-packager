#!/bin/sh
# Copyright 2010 Antoine Bertin
# <diaoulael [ignore this] at users.sourceforge period net>
#
# This file is part of syno-packager.
#
# syno-packager is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# syno-packager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with syno-packager.  If not, see <http://www.gnu.org/licenses/>.

# Common
SBDIR=/usr/local/SickBeard
SBVAR=$SBDIR/var
SABLIB=/usr/local/SABnzbd/lib
SBEXE=$SBDIR/SickBeard/SickBeard.py
PYEXE=/usr/local/bin/python
PAREXE=/usr/local/bin/cfg.parser
NICEXE=/usr/local/bin/nice
IONEXE=/usr/local/bin/ionice
PSEXE=/usr/local/bin/ps
SUEXE=/bin/su
SABEXEUSR=sabnzbduser
SYNO3APP=/usr/syno/synoman/webman/3rdparty

# Files
SBCNF=$SBDIR/SickBeard/config.ini
SBPID=$SBVAR/SickBeard.pid
SBLOG=$SBVAR/SickBeard-spk.log
SBINFO=/var/packages/SickBeard/INFO

start_daemon ()
{
	# Log
	echo `date`" : Starting SickBeard..." >> $SBLOG
	
	# Retrieve port
	if [ -r $SBCNF ]; then
		SBPORT=`$PAREXE General web_port $SBCNF`
	fi

	# Update port in INFO file
	sed -i "s/^adminport.*$/adminport=\"$SBPORT\"/g" $SBINFO

	# Start SickBeard
	$SUEXE $SABEXEUSR -s /bin/sh -c "LD_LIBRARY_PATH=$SABLIB $NICEXE -n15 $IONEXE -c2 -n4 $PYEXE $SBEXE --pidfile $SBPID --daemon >> $SBLOG 2>&1"

	# Install the application in the main interface.
	if [ -d $SYNO3APP ]
	then
		rm -f $SYNO3APP/SickBeard
		ln -s $UMSHR/3rdparty $SYNO3APP/SickBeard
	fi
}

stop_daemon ()
{
	# Log
	echo `date`" : Stoping SickBeard..." >> $SBLOG
	
	# Kill daemon
	if [ -f $SBPID ]; then
		kill `cat $SBPID`
	fi
	sleep 1

	# Wait until SickBeard is really dead (may take some time)
	counter=20
	while [ $counter -gt 0 ] 
	do
		daemon_status || break
		let counter=counter-1
		sleep 1
	done

	# Remove the application from the main interface if it was previously added.
	if [ -h $SYNO3APP/SickBeard ]
	then
		rm -f $SYNO3APP/SickBeard
	fi
}

daemon_status ()
{
	[ "`$SUEXE $SABEXEUSR -s /bin/sh -c \"$PSEXE x | grep SickBeard.py | grep -v grep\"`" != "" ]
}


case $1 in
	start)
		if daemon_status; then
			echo "SickBeard daemon already running !"
			exit 0
		else
			echo "Starting SickBeard daemon..."
			start_daemon
			exit $?
		fi
		;;
	stop)
		echo "Stopping SickBeard daemon..."
		stop_daemon
		exit 0
		;;
	restart)
		stop_daemon
		start_daemon
		exit $?
		;;
	status)
		if daemon_status; then
			echo "Running"
			exit 0
		else
			echo "Not running"
			exit 1
		fi
		;;
	log)
		echo $SBLOG
		exit 0
		;;
	*)
		exit 1
		;;
esac
