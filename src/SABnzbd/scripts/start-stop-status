#!/bin/sh
# Copyright 2010 Antoine Bertin
# <diaoulael [ignore this] at users.sourceforge period net>
#
# This file is part of syno-packager.
#
# syno-packager is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# syno-packager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with syno-packager.  If not, see <http://www.gnu.org/licenses/>.

# Common
SABDIR=/usr/local/SABnzbd
SABVAR=$SABDIR/var
SABLIB=$SABDIR/lib
SABETC=$SABDIR/etc
SABSHR=$SABDIR/share
SABEXE=$SABDIR/SABnzbd/SABnzbd.py
PYEXE=/usr/local/bin/python
PAREXE=/usr/local/bin/cfg.parser
NICEXE=/usr/local/bin/nice
IONEXE=/usr/local/bin/ionice
PSEXE=/usr/local/bin/ps
SUEXE=/bin/su
SABEXEUSR=sabnzbduser
SYNO3APP=/usr/syno/synoman/webman/3rdparty

# Files
SABCNF=$SABETC/config.ini
SABLOG=$SABVAR/SABnzbd-spk.log
SABOLDCNF=$SABVAR/config.ini.old
SABINFO=/var/packages/SABnzbd/INFO

start_daemon ()
{
	# Log
	echo `date`" : Starting SABnzbd..." >> $SABLOG
	
	# Retrieve port
	if [ -r $SABCNF ]; then
		SABPORT=`$PAREXE misc port $SABCNF`
	fi

	# Update port in INFO file
	sed -i "s/^adminport.*$/adminport=\"$SABPORT\"/g" $SABINFO

	# Save config for later use
	cp $SABCNF $SABOLDCNF

	# Start SABnzbd
	$SUEXE $SABEXEUSR -s /bin/sh -c "LD_LIBRARY_PATH=$SABLIB $NICEXE -n15 $IONEXE -c2 -n4 $PYEXE $SABEXE -f $SABCNF -d >> $SABLOG 2>&1"

	# Install the application in the main interface.
	if [ -d $SYNO3APP ]
	then
		rm -f $SYNO3APP/SABnzbd
		ln -s $SABSHR/3rdparty $SYNO3APP/SABnzbd
	fi
}

stop_daemon ()
{
	# Log
	echo `date`" : Stoping SABnzbd..." >> $SABLOG

	# Remove the application from the main interface if it was previously added.
	if [ -h $SYNO3APP/SABnzbd ]
	then
		rm -f $SYNO3APP/SABnzbd
	fi

	# Retrieve values from previous configuration file as it may have changed
	SABPORT=`$PAREXE misc port $SABOLDCNF`
	SABHOST=`$PAREXE misc host $SABOLDCNF`
	SABUSR=`$PAREXE misc username $SABOLDCNF`
	SABPWD=`$PAREXE misc password $SABOLDCNF`
	SABAPIKEY=`$PAREXE misc api_key $SABOLDCNF`

	# Correct invalid values
	if [ "$SABHOST" = "0.0.0.0" ]; then
		SABHOST="localhost"
	fi
	if [ "$SABAPIKEY" = "" ]; then
		SABAPIKEY=`$PAREXE misc api_key $SABCNF`
	fi

	# Kill daemon
	if [ "$SABUSR" = "" -a "$SABPWD" = "" ]; then
		$SUEXE $SABEXEUSR -s /bin/sh -c "wget -q --delete-after 'http://$SABHOST:$SABPORT/sabnzbd/api?mode=shutdown&apikey=$SABAPIKEY'"
	else
		$SUEXE $SABEXEUSR -s /bin/sh -c "wget -q --delete-after 'http://$SABHOST:$SABPORT/sabnzbd/api?mode=shutdown&ma_username=$SABUSR&ma_password=$SABPWD&apikey=$SABAPIKEY'"
	fi
	sleep 1

	# Wait until SABnzbd is really dead (may take some time)
	counter=20
	while [ $counter -gt 0 ] 
	do
		daemon_status || exit 0
		let counter=counter-1
		sleep 1
	done

	# If we fail, try with new config file as user may have restarted SABnzbd manually
	SABPORT=`$PAREXE misc port $SABCNF`
	SABHOST=`$PAREXE misc host $SABCNF`
	SABUSR=`$PAREXE misc username $SABCNF`
	SABPWD=`$PAREXE misc password $SABCNF`
	SABAPIKEY=`$PAREXE misc api_key $SABCNF`

	# Correct invalid values
	if [ "$SABHOST" = "0.0.0.0" ]; then
		SABHOST="localhost"
	fi

	# Kill daemon
	if [ "$SABUSR" = "" -a "$SABPWD" = "" ]; then
		$SUEXE $SABEXEUSR -s /bin/sh -c "wget -q --delete-after 'http://$SABHOST:$SABPORT/sabnzbd/api?mode=shutdown&apikey=$SABAPIKEY'"
	else
		$SUEXE $SABEXEUSR -s /bin/sh -c "wget -q --delete-after 'http://$SABHOST:$SABPORT/sabnzbd/api?mode=shutdown&ma_username=$SABUSR&ma_password=$SABPWD&apikey=$SABAPIKEY'"
	fi
	sleep 1

	# Wait until SABnzbd is really dead (may take some time)
	counter=20
	while [ $counter -gt 0 ] 
	do
		daemon_status || exit 0
		let counter=counter-1
		sleep 1
	done
	exit 1	
}

daemon_status ()
{
	[ "`$SUEXE $SABEXEUSR -s /bin/sh -c \"$PSEXE x | grep SABnzbd.py | grep -v grep\"`" != "" ]
}


case $1 in
	start)
		if daemon_status; then
			echo "SABnzbd daemon already running !"
			exit 0
		else
			echo "Starting SABnzbd daemon..."
			start_daemon
			exit $?
		fi
		;;
	stop)
		echo "Stopping SABnzbd daemon..."
		stop_daemon
		exit 0
		;;
	restart)
		stop_daemon
		start_daemon
		exit $?
		;;
	status)
		if daemon_status; then
			echo "Running"
			exit 0
		else
			echo "Not running"
			exit 1
		fi
		;;
	log)
		echo $SABLOG
		exit 0
		;;
	*)
		exit 1
		;;
esac
